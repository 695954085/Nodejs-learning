{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./node_modules/reflect-metadata/Reflect.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__decorate","decorators","target","desc","arguments","length","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","WareService","this","_stock","configurable","decreaseStock","CartService","_wareCount","increaseWareCount","WareComponent","wareService","cartService","addToCart","console","log","stock","wareCount","Injectable","constructor","wareComponent","DependencyInjector","getService","paramtypes","getMetadata","parameters","_i","paramtypes_1","parameterType","parameter","push","apply","concat","process","global","factory","root","self","Function","exporter","makeExporter","previous","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","undefined","functionPrototype","getPrototypeOf","usePolyfill","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","index","result","done","throw","error","return","_cacheKey","_cacheIndex","_find","set","delete","size","clear","getKey","getValue","getEntry","insert","indexOf","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","argument","ToBoolean","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","IteratorStep","nextValue","IteratorValue","e","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","IsSymbol","ToString","IsArray","isArray","IsConstructor","V","func","iterResult","f","OrdinaryGetPrototypeOf","proto","prototypeProto","__","propertyKey","attributes","decorator","decorated","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","ownKeys_1","hasKey","_a","parentKeys_1","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","eval","window"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n// 导入reflect-metadata\r\nimport 'reflect-metadata';\r\n// 商品服务类\r\nvar WareService = /** @class */ (function () {\r\n    function WareService() {\r\n        this._stock = 10; // 库存\r\n    }\r\n    Object.defineProperty(WareService.prototype, \"stock\", {\r\n        get: function () {\r\n            return this._stock;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WareService.prototype.decreaseStock = function () {\r\n        this._stock--;\r\n    };\r\n    return WareService;\r\n}());\r\n// 购物车服务类\r\nvar CartService = /** @class */ (function () {\r\n    function CartService() {\r\n        this._wareCount = 0; // 购物车商品数量\r\n    }\r\n    Object.defineProperty(CartService.prototype, \"wareCount\", {\r\n        get: function () {\r\n            return this._wareCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CartService.prototype.increaseWareCount = function () {\r\n        this._wareCount++;\r\n    };\r\n    return CartService;\r\n}());\r\n// 商品组件类\r\nvar WareComponent = /** @class */ (function () {\r\n    // 构造商品组件，依赖于商品服务和购物车服务\r\n    function WareComponent(wareService, cartService) {\r\n        this.wareService = wareService;\r\n        this.cartService = cartService;\r\n    }\r\n    // 添加商品的购物车：减少商品库存量，同时增加购物车商品数量\r\n    WareComponent.prototype.addToCart = function () {\r\n        this.wareService.decreaseStock();\r\n        this.cartService.increaseWareCount();\r\n        console.log(\"\\u5DF2\\u6210\\u529F\\u6DFB\\u52A0\\u5546\\u54C1\\u5230\\u8D2D\\u7269\\u8F66\\uFF0C\\u76EE\\u524D\\u5546\\u54C1\\u5E93\\u5B58\\uFF1A\" + this.wareService.stock + \"\\uFF1B\\u8D2D\\u7269\\u8F66\\u5546\\u54C1\\u6570\\u91CF\\uFF1A\" + this.cartService.wareCount + \"\\u3002\");\r\n    };\r\n    WareComponent = __decorate([\r\n        Injectable // 类装饰器\r\n        ,\r\n        __metadata(\"design:paramtypes\", [WareService, CartService])\r\n    ], WareComponent);\r\n    return WareComponent;\r\n}());\r\n// 类装饰器\r\n// @ts-ignore: Unreachable code error\r\nfunction Injectable(constructor) {\r\n}\r\n// 依赖注入器类\r\nvar DependencyInjector = /** @class */ (function () {\r\n    function DependencyInjector() {\r\n    }\r\n    /**\r\n     * 获取指定类的对象\r\n     * @param constructor 目标对象的类（的构造函数）\r\n     */\r\n    DependencyInjector.getService = function (constructor) {\r\n        // 获取类装饰器Injectable为目标类定义的名为“design:paramtypes”的元数据\r\n        // 即目标类的构造函数的参数的构造函数组成的数组\r\n        var paramtypes = Reflect.getMetadata('design:paramtypes', constructor);\r\n        // 如果目标类上没有名为“design:paramtypes”的元数据\r\n        // 那么直接返回通过这个类创建的对象\r\n        if (!paramtypes || !paramtypes.length) {\r\n            return new constructor();\r\n        }\r\n        // 需要传递给目标类的构造函数的参数数组\r\n        var parameters = [];\r\n        for (var _i = 0, paramtypes_1 = paramtypes; _i < paramtypes_1.length; _i++) {\r\n            var parameterType = paramtypes_1[_i];\r\n            // 递归调用当前方法，创建参数，并将参数添加到参数数组中\r\n            var parameter = this.getService(parameterType);\r\n            parameters.push(parameter);\r\n        }\r\n        // 使用参数数组构造目标对象，并将它返回给调用方\r\n        return new (constructor.bind.apply(constructor, [void 0].concat(parameters)))();\r\n    };\r\n    return DependencyInjector;\r\n}());\r\n// 通过reflect-metadata中的Reflect为WareComponent定义名为design:paramtypes\r\n// 、值为[WareService, CartService]的元数据\r\n// Reflect.defineMetadata('design:paramtypes', [WareService, CartService], WareComponent);\r\n// 通过依赖注入器获取商品组件实例，并调用其addToCart()方法\r\nvar wareComponent = DependencyInjector.getService(WareComponent);\r\nwareComponent.addToCart();\r\nwareComponent.addToCart();\r\n","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n    (function (factory) {\r\n        var root = typeof global === \"object\" ? global :\r\n            typeof self === \"object\" ? self :\r\n                typeof this === \"object\" ? this :\r\n                    Function(\"return this;\")();\r\n        var exporter = makeExporter(Reflect);\r\n        if (typeof root.Reflect === \"undefined\") {\r\n            root.Reflect = Reflect;\r\n        }\r\n        else {\r\n            exporter = makeExporter(root.Reflect, exporter);\r\n        }\r\n        factory(exporter);\r\n        function makeExporter(target, previous) {\r\n            return function (key, value) {\r\n                if (typeof target[key] !== \"function\") {\r\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\r\n                }\r\n                if (previous)\r\n                    previous(key, value);\r\n            };\r\n        }\r\n    })(function (exporter) {\r\n        var hasOwn = Object.prototype.hasOwnProperty;\r\n        // feature test for Symbol support\r\n        var supportsSymbol = typeof Symbol === \"function\";\r\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        var HashMap = {\r\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n            create: supportsCreate\r\n                ? function () { return MakeDictionary(Object.create(null)); }\r\n                : supportsProto\r\n                    ? function () { return MakeDictionary({ __proto__: null }); }\r\n                    : function () { return MakeDictionary({}); },\r\n            has: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key); }\r\n                : function (map, key) { return key in map; },\r\n            get: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n                : function (map, key) { return map[key]; },\r\n        };\r\n        // Load global or shim versions of Map, Set, and WeakMap\r\n        var functionPrototype = Object.getPrototypeOf(Function);\r\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n        // [[Metadata]] internal slot\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n        var Metadata = new _WeakMap();\r\n        /**\r\n         * Applies a set of decorators to a property of a target object.\r\n         * @param decorators An array of decorators.\r\n         * @param target The target object.\r\n         * @param propertyKey (Optional) The property key to decorate.\r\n         * @param attributes (Optional) The property descriptor for the target key.\r\n         * @remarks Decorators are applied in reverse order.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Example = Reflect.decorate(decoratorsArray, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Object.defineProperty(Example, \"staticMethod\",\r\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n         *\r\n         *     // method (on prototype)\r\n         *     Object.defineProperty(Example.prototype, \"method\",\r\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n         *\r\n         */\r\n        function decorate(decorators, target, propertyKey, attributes) {\r\n            if (!IsUndefined(propertyKey)) {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                    throw new TypeError();\r\n                if (IsNull(attributes))\r\n                    attributes = undefined;\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n                return DecorateProperty(decorators, target, propertyKey, attributes);\r\n            }\r\n            else {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                return DecorateConstructor(decorators, target);\r\n            }\r\n        }\r\n        exporter(\"decorate\", decorate);\r\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n        /**\r\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n         * @param metadataKey The key for the metadata entry.\r\n         * @param metadataValue The value for the metadata entry.\r\n         * @returns A decorator function.\r\n         * @remarks\r\n         * If `metadataKey` is already defined for the target and target key, the\r\n         * metadataValue for that key will be overwritten.\r\n         * @example\r\n         *\r\n         *     // constructor\r\n         *     @Reflect.metadata(key, value)\r\n         *     class Example {\r\n         *     }\r\n         *\r\n         *     // property (on constructor, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticProperty;\r\n         *     }\r\n         *\r\n         *     // property (on prototype, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         property;\r\n         *     }\r\n         *\r\n         *     // method (on constructor)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticMethod() { }\r\n         *     }\r\n         *\r\n         *     // method (on prototype)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         method() { }\r\n         *     }\r\n         *\r\n         */\r\n        function metadata(metadataKey, metadataValue) {\r\n            function decorator(target, propertyKey) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n            }\r\n            return decorator;\r\n        }\r\n        exporter(\"metadata\", metadata);\r\n        /**\r\n         * Define a unique metadata entry on the target.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param metadataValue A value that contains attached metadata.\r\n         * @param target The target object on which to define metadata.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n         *\r\n         *     // decorator factory as metadata-producing annotation.\r\n         *     function MyAnnotation(options): Decorator {\r\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n         *     }\r\n         *\r\n         */\r\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        exporter(\"defineMetadata\", defineMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasMetadata\", hasMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getMetadata\", getMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadata\", getOwnMetadata);\r\n        /**\r\n         * Gets the metadata keys defined on the target object or its prototype chain.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getMetadataKeys\", getMetadataKeys);\r\n        /**\r\n         * Gets the unique metadata keys defined on the target object.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\r\n        /**\r\n         * Deletes the metadata entry from the target object with the provided key.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function deleteMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            if (!metadataMap.delete(metadataKey))\r\n                return false;\r\n            if (metadataMap.size > 0)\r\n                return true;\r\n            var targetMetadata = Metadata.get(target);\r\n            targetMetadata.delete(propertyKey);\r\n            if (targetMetadata.size > 0)\r\n                return true;\r\n            Metadata.delete(target);\r\n            return true;\r\n        }\r\n        exporter(\"deleteMetadata\", deleteMetadata);\r\n        function DecorateConstructor(decorators, target) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsConstructor(decorated))\r\n                        throw new TypeError();\r\n                    target = decorated;\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target, propertyKey, descriptor);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsObject(decorated))\r\n                        throw new TypeError();\r\n                    descriptor = decorated;\r\n                }\r\n            }\r\n            return descriptor;\r\n        }\r\n        function GetOrCreateMetadataMap(O, P, Create) {\r\n            var targetMetadata = Metadata.get(O);\r\n            if (IsUndefined(targetMetadata)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                targetMetadata = new _Map();\r\n                Metadata.set(O, targetMetadata);\r\n            }\r\n            var metadataMap = targetMetadata.get(P);\r\n            if (IsUndefined(metadataMap)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                metadataMap = new _Map();\r\n                targetMetadata.set(P, metadataMap);\r\n            }\r\n            return metadataMap;\r\n        }\r\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return true;\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n            return false;\r\n        }\r\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            return ToBoolean(metadataMap.has(MetadataKey));\r\n        }\r\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n            return undefined;\r\n        }\r\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return undefined;\r\n            return metadataMap.get(MetadataKey);\r\n        }\r\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n            metadataMap.set(MetadataKey, MetadataValue);\r\n        }\r\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n        function OrdinaryMetadataKeys(O, P) {\r\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (parent === null)\r\n                return ownKeys;\r\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n            if (parentKeys.length <= 0)\r\n                return ownKeys;\r\n            if (ownKeys.length <= 0)\r\n                return parentKeys;\r\n            var set = new _Set();\r\n            var keys = [];\r\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n                var key = ownKeys_1[_i];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n                var key = parentKeys_1[_a];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n        function OrdinaryOwnMetadataKeys(O, P) {\r\n            var keys = [];\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return keys;\r\n            var keysObj = metadataMap.keys();\r\n            var iterator = GetIterator(keysObj);\r\n            var k = 0;\r\n            while (true) {\r\n                var next = IteratorStep(iterator);\r\n                if (!next) {\r\n                    keys.length = k;\r\n                    return keys;\r\n                }\r\n                var nextValue = IteratorValue(next);\r\n                try {\r\n                    keys[k] = nextValue;\r\n                }\r\n                catch (e) {\r\n                    try {\r\n                        IteratorClose(iterator);\r\n                    }\r\n                    finally {\r\n                        throw e;\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        // 6 ECMAScript Data Typ0es and Values\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n        function Type(x) {\r\n            if (x === null)\r\n                return 1 /* Null */;\r\n            switch (typeof x) {\r\n                case \"undefined\": return 0 /* Undefined */;\r\n                case \"boolean\": return 2 /* Boolean */;\r\n                case \"string\": return 3 /* String */;\r\n                case \"symbol\": return 4 /* Symbol */;\r\n                case \"number\": return 5 /* Number */;\r\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n                default: return 6 /* Object */;\r\n            }\r\n        }\r\n        // 6.1.1 The Undefined Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n        function IsUndefined(x) {\r\n            return x === undefined;\r\n        }\r\n        // 6.1.2 The Null Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n        function IsNull(x) {\r\n            return x === null;\r\n        }\r\n        // 6.1.5 The Symbol Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n        function IsSymbol(x) {\r\n            return typeof x === \"symbol\";\r\n        }\r\n        // 6.1.7 The Object Type\r\n        // https://tc39.github.io/ecma262/#sec-object-type\r\n        function IsObject(x) {\r\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n        }\r\n        // 7.1 Type Conversion\r\n        // https://tc39.github.io/ecma262/#sec-type-conversion\r\n        // 7.1.1 ToPrimitive(input [, PreferredType])\r\n        // https://tc39.github.io/ecma262/#sec-toprimitive\r\n        function ToPrimitive(input, PreferredType) {\r\n            switch (Type(input)) {\r\n                case 0 /* Undefined */: return input;\r\n                case 1 /* Null */: return input;\r\n                case 2 /* Boolean */: return input;\r\n                case 3 /* String */: return input;\r\n                case 4 /* Symbol */: return input;\r\n                case 5 /* Number */: return input;\r\n            }\r\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n            if (exoticToPrim !== undefined) {\r\n                var result = exoticToPrim.call(input, hint);\r\n                if (IsObject(result))\r\n                    throw new TypeError();\r\n                return result;\r\n            }\r\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n        }\r\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n        function OrdinaryToPrimitive(O, hint) {\r\n            if (hint === \"string\") {\r\n                var toString_1 = O.toString;\r\n                if (IsCallable(toString_1)) {\r\n                    var result = toString_1.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var toString_2 = O.toString;\r\n                if (IsCallable(toString_2)) {\r\n                    var result = toString_2.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            throw new TypeError();\r\n        }\r\n        // 7.1.2 ToBoolean(argument)\r\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n        function ToBoolean(argument) {\r\n            return !!argument;\r\n        }\r\n        // 7.1.12 ToString(argument)\r\n        // https://tc39.github.io/ecma262/#sec-tostring\r\n        function ToString(argument) {\r\n            return \"\" + argument;\r\n        }\r\n        // 7.1.14 ToPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-topropertykey\r\n        function ToPropertyKey(argument) {\r\n            var key = ToPrimitive(argument, 3 /* String */);\r\n            if (IsSymbol(key))\r\n                return key;\r\n            return ToString(key);\r\n        }\r\n        // 7.2 Testing and Comparison Operations\r\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n        // 7.2.2 IsArray(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isarray\r\n        function IsArray(argument) {\r\n            return Array.isArray\r\n                ? Array.isArray(argument)\r\n                : argument instanceof Object\r\n                    ? argument instanceof Array\r\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n        }\r\n        // 7.2.3 IsCallable(argument)\r\n        // https://tc39.github.io/ecma262/#sec-iscallable\r\n        function IsCallable(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.4 IsConstructor(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isconstructor\r\n        function IsConstructor(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.7 IsPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n        function IsPropertyKey(argument) {\r\n            switch (Type(argument)) {\r\n                case 3 /* String */: return true;\r\n                case 4 /* Symbol */: return true;\r\n                default: return false;\r\n            }\r\n        }\r\n        // 7.3 Operations on Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n        // 7.3.9 GetMethod(V, P)\r\n        // https://tc39.github.io/ecma262/#sec-getmethod\r\n        function GetMethod(V, P) {\r\n            var func = V[P];\r\n            if (func === undefined || func === null)\r\n                return undefined;\r\n            if (!IsCallable(func))\r\n                throw new TypeError();\r\n            return func;\r\n        }\r\n        // 7.4 Operations on Iterator Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n        function GetIterator(obj) {\r\n            var method = GetMethod(obj, iteratorSymbol);\r\n            if (!IsCallable(method))\r\n                throw new TypeError(); // from Call\r\n            var iterator = method.call(obj);\r\n            if (!IsObject(iterator))\r\n                throw new TypeError();\r\n            return iterator;\r\n        }\r\n        // 7.4.4 IteratorValue(iterResult)\r\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n        function IteratorValue(iterResult) {\r\n            return iterResult.value;\r\n        }\r\n        // 7.4.5 IteratorStep(iterator)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n        function IteratorStep(iterator) {\r\n            var result = iterator.next();\r\n            return result.done ? false : result;\r\n        }\r\n        // 7.4.6 IteratorClose(iterator, completion)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n        function IteratorClose(iterator) {\r\n            var f = iterator[\"return\"];\r\n            if (f)\r\n                f.call(iterator);\r\n        }\r\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n        function OrdinaryGetPrototypeOf(O) {\r\n            var proto = Object.getPrototypeOf(O);\r\n            if (typeof O !== \"function\" || O === functionPrototype)\r\n                return proto;\r\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n            // Try to determine the superclass constructor. Compatible implementations\r\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n            // or ensure each class has a valid `constructor` property on its prototype that\r\n            // points back to the constructor.\r\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n            if (proto !== functionPrototype)\r\n                return proto;\r\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n            var prototype = O.prototype;\r\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n            if (prototypeProto == null || prototypeProto === Object.prototype)\r\n                return proto;\r\n            // If the constructor was not a function, then we cannot determine the heritage.\r\n            var constructor = prototypeProto.constructor;\r\n            if (typeof constructor !== \"function\")\r\n                return proto;\r\n            // If we have some kind of self-reference, then we cannot determine the heritage.\r\n            if (constructor === O)\r\n                return proto;\r\n            // we have a pretty good guess at the heritage.\r\n            return constructor;\r\n        }\r\n        // naive Map shim\r\n        function CreateMapPolyfill() {\r\n            var cacheSentinel = {};\r\n            var arraySentinel = [];\r\n            var MapIterator = (function () {\r\n                function MapIterator(keys, values, selector) {\r\n                    this._index = 0;\r\n                    this._keys = keys;\r\n                    this._values = values;\r\n                    this._selector = selector;\r\n                }\r\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n                MapIterator.prototype.next = function () {\r\n                    var index = this._index;\r\n                    if (index >= 0 && index < this._keys.length) {\r\n                        var result = this._selector(this._keys[index], this._values[index]);\r\n                        if (index + 1 >= this._keys.length) {\r\n                            this._index = -1;\r\n                            this._keys = arraySentinel;\r\n                            this._values = arraySentinel;\r\n                        }\r\n                        else {\r\n                            this._index++;\r\n                        }\r\n                        return { value: result, done: false };\r\n                    }\r\n                    return { value: undefined, done: true };\r\n                };\r\n                MapIterator.prototype.throw = function (error) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    throw error;\r\n                };\r\n                MapIterator.prototype.return = function (value) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    return { value: value, done: true };\r\n                };\r\n                return MapIterator;\r\n            }());\r\n            return (function () {\r\n                function Map() {\r\n                    this._keys = [];\r\n                    this._values = [];\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                }\r\n                Object.defineProperty(Map.prototype, \"size\", {\r\n                    get: function () { return this._keys.length; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n                Map.prototype.get = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    return index >= 0 ? this._values[index] : undefined;\r\n                };\r\n                Map.prototype.set = function (key, value) {\r\n                    var index = this._find(key, /*insert*/ true);\r\n                    this._values[index] = value;\r\n                    return this;\r\n                };\r\n                Map.prototype.delete = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    if (index >= 0) {\r\n                        var size = this._keys.length;\r\n                        for (var i = index + 1; i < size; i++) {\r\n                            this._keys[i - 1] = this._keys[i];\r\n                            this._values[i - 1] = this._values[i];\r\n                        }\r\n                        this._keys.length--;\r\n                        this._values.length--;\r\n                        if (key === this._cacheKey) {\r\n                            this._cacheKey = cacheSentinel;\r\n                            this._cacheIndex = -2;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                Map.prototype.clear = function () {\r\n                    this._keys.length = 0;\r\n                    this._values.length = 0;\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                };\r\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n                Map.prototype._find = function (key, insert) {\r\n                    if (this._cacheKey !== key) {\r\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                    }\r\n                    if (this._cacheIndex < 0 && insert) {\r\n                        this._cacheIndex = this._keys.length;\r\n                        this._keys.push(key);\r\n                        this._values.push(undefined);\r\n                    }\r\n                    return this._cacheIndex;\r\n                };\r\n                return Map;\r\n            }());\r\n            function getKey(key, _) {\r\n                return key;\r\n            }\r\n            function getValue(_, value) {\r\n                return value;\r\n            }\r\n            function getEntry(key, value) {\r\n                return [key, value];\r\n            }\r\n        }\r\n        // naive Set shim\r\n        function CreateSetPolyfill() {\r\n            return (function () {\r\n                function Set() {\r\n                    this._map = new _Map();\r\n                }\r\n                Object.defineProperty(Set.prototype, \"size\", {\r\n                    get: function () { return this._map.size; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Set.prototype.has = function (value) { return this._map.has(value); };\r\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n                Set.prototype.clear = function () { this._map.clear(); };\r\n                Set.prototype.keys = function () { return this._map.keys(); };\r\n                Set.prototype.values = function () { return this._map.values(); };\r\n                Set.prototype.entries = function () { return this._map.entries(); };\r\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n                return Set;\r\n            }());\r\n        }\r\n        // naive WeakMap shim\r\n        function CreateWeakMapPolyfill() {\r\n            var UUID_SIZE = 16;\r\n            var keys = HashMap.create();\r\n            var rootKey = CreateUniqueKey();\r\n            return (function () {\r\n                function WeakMap() {\r\n                    this._key = CreateUniqueKey();\r\n                }\r\n                WeakMap.prototype.has = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\r\n                };\r\n                WeakMap.prototype.get = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n                };\r\n                WeakMap.prototype.set = function (target, value) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                    table[this._key] = value;\r\n                    return this;\r\n                };\r\n                WeakMap.prototype.delete = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? delete table[this._key] : false;\r\n                };\r\n                WeakMap.prototype.clear = function () {\r\n                    // NOTE: not a real clear, just makes the previous data unreachable\r\n                    this._key = CreateUniqueKey();\r\n                };\r\n                return WeakMap;\r\n            }());\r\n            function CreateUniqueKey() {\r\n                var key;\r\n                do\r\n                    key = \"@@WeakMap@@\" + CreateUUID();\r\n                while (HashMap.has(keys, key));\r\n                keys[key] = true;\r\n                return key;\r\n            }\r\n            function GetOrCreateWeakMapTable(target, create) {\r\n                if (!hasOwn.call(target, rootKey)) {\r\n                    if (!create)\r\n                        return undefined;\r\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n                }\r\n                return target[rootKey];\r\n            }\r\n            function FillRandomBytes(buffer, size) {\r\n                for (var i = 0; i < size; ++i)\r\n                    buffer[i] = Math.random() * 0xff | 0;\r\n                return buffer;\r\n            }\r\n            function GenRandomBytes(size) {\r\n                if (typeof Uint8Array === \"function\") {\r\n                    if (typeof crypto !== \"undefined\")\r\n                        return crypto.getRandomValues(new Uint8Array(size));\r\n                    if (typeof msCrypto !== \"undefined\")\r\n                        return msCrypto.getRandomValues(new Uint8Array(size));\r\n                    return FillRandomBytes(new Uint8Array(size), size);\r\n                }\r\n                return FillRandomBytes(new Array(size), size);\r\n            }\r\n            function CreateUUID() {\r\n                var data = GenRandomBytes(UUID_SIZE);\r\n                // mark as random - RFC 4122 § 4.4\r\n                data[6] = data[6] & 0x4f | 0x40;\r\n                data[8] = data[8] & 0xbf | 0x80;\r\n                var result = \"\";\r\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                    var byte = data[offset];\r\n                    if (offset === 4 || offset === 6 || offset === 8)\r\n                        result += \"-\";\r\n                    if (byte < 16)\r\n                        result += \"0\";\r\n                    result += byte.toString(16).toLowerCase();\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n        function MakeDictionary(obj) {\r\n            obj.__ = undefined;\r\n            delete obj.__;\r\n            return obj;\r\n        }\r\n    });\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n"],"sourceRoot":""}